type Query {
  todo(todoID: ID!): Todo
  todos(page: Int, length: Int): Todos
  searchTodo(needle: String!, page: Int, length: Int): Todos
  completedTodos(page: Int, length: Int): Todos
}

type Mutation {
  createTodo(title: String!): Todo
  markTodoCompleted(todoID: ID!): Todo
  changeTodoTitle(todoID: ID!, title: String!): Todo
  deleteTodo(todoID: ID!): Todo
  clearTodos: Int!
}

interface WithPage {
  pageInfo: PageInfo!
  nodes: [Node!]!
}

type PageInfo {
  hasNextPage: Boolean!
  index: Int!
  maxLength: Int!
  pageCount: Int!
  totalCount: Int!
}

type Todos implements WithPage {
  pageInfo: PageInfo!
  nodes: [Todo!]!
}

type Todo {
  id: ID!
  title: String!
  completed: Boolean
}

union Node = Todo
